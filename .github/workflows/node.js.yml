# This workflow will do a clean installation of node dependencies, cache/restore them,
# lint the code, audit dependencies, build the source code, and run tests across different versions of Node.js.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ${{ matrix.os }} # Use the OS defined in the matrix

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, macos-latest, windows-latest] # Add OS support for Ubuntu, MacOS, and Windows

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install Server Dependencies
      - name: Install Server Dependencies
        run: |
          cd server
          npm ci

      # Install Client Dependencies
      - name: Install Client Dependencies
        run: |
          cd client
          npm ci

      # Run Linting for Server
      - name: Run Server Linting
        run: |
          cd server
          npm run lint

      # Run Linting for Client
      - name: Run Client Linting
        run: |
          cd client
          npm run lint

      # Audit for vulnerable dependencies for Server
      - name: Run Server Security Audit
        run: |
          cd server
          npm audit --audit-level=high
      
      # Audit for vulnerable dependencies for Client
      - name: Run Client Security Audit
        run: |
          cd client
          npm audit --audit-level=high

      # Build the Server if build script exists
      - name: Build Server
        run: |
          cd server
          npm run build --if-present

      # Build the Client if build script exists
      - name: Build Client
        run: |
          cd client
          npm run build --if-present

      # Run Unit Tests with Coverage for Server
      - name: Run Server Unit Tests with Coverage
        run: |
          cd server
          npm test -- --coverage

      # Run Unit Tests with Coverage for Client
      - name: Run Client Unit Tests with Coverage
        run: |
          cd client
          npm test -- --coverage

      # Upload coverage results as an artifact for Server
      - name: Upload Server Code Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: server-coverage-report
          path: server/coverage/

      # Upload coverage results as an artifact for Client
      - name: Upload Client Code Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: client-coverage-report
          path: client/coverage/

      # Cache Node Modules for Server
      - name: Cache Server Node Modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache Node Modules for Client
      - name: Cache Client Node Modules
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
