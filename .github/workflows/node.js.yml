# This workflow will do a clean installation of node dependencies, cache/restore them, lint the code, audit dependencies, build the source code, and run tests across different versions of Node.js.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, macos-latest, windows-latest] # Add OS support for Ubuntu, MacOS, and Windows
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Install dependencies
    - run: npm ci

    # Run Linting
    - name: Run Linting
      run: npm run lint

    # Audit for vulnerable dependencies
    - name: Run Security Audit
      run: npm audit --audit-level=high
    
    # Build the application if build script exists
    - run: npm run build --if-present

    # Run Tests with Coverage
    - name: Run Unit Tests with Coverage
      run: npm test -- --coverage

    # Upload coverage results as an artifact
    - name: Upload Code Coverage Results
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

    # Save the cache for faster builds
    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
